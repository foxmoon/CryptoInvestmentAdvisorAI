import type { CustomWallet, Metadata, ProjectId, SdkVersion, Tokens } from '../utils/TypeUtil.js';
export interface OptionsControllerState {
    projectId: ProjectId;
    sdkType: 'w3m';
    sdkVersion: SdkVersion;
    /**
     * A boolean that allows you to add or remove the "All Wallets" button on the modal
     * @default 'SHOW'
     * @see https://docs.walletconnect.com/appkit/react/core/options#allwallets
     */
    allWallets?: 'SHOW' | 'HIDE' | 'ONLY_MOBILE';
    /**
     * Array of wallet ids to be shown in the modal's connection view with priority. These wallets will also show up first in `All Wallets` view
     * @default []
     * @see https://docs.walletconnect.com/appkit/react/core/options#featuredwalletids
     */
    featuredWalletIds?: string[];
    /**
     * Array of wallet ids to be shown (order is respected). Unlike `featuredWalletIds`, these wallets will be the only ones shown in `All Wallets` view and as recommended wallets.
     * @default []
     * @see https://docs.walletconnect.com/appkit/react/core/options#includewalletids
     */
    includeWalletIds?: string[];
    /**
     * Array of wallet ids to be excluded from the wallet list in the modal.
     * @default []
     * @see https://docs.walletconnect.com/appkit/react/core/options#excludewalletids
     */
    excludeWalletIds?: string[];
    /**
     * Array of tokens to show the user's balance of. Each key represents the chain id of the token's blockchain
     * @default {}
     * @see https://docs.walletconnect.com/appkit/react/core/options#tokens
     */
    tokens?: Tokens;
    /**
     * Add custom wallets to the modal. CustomWallets is an array of objects, where each object contains specific information of a custom wallet.
     * @default []
     * @see https://docs.walletconnect.com/appkit/react/core/options#customwallets
     *
     */
    customWallets?: CustomWallet[];
    /**
     * You can add an url for the terms and conditions link.
     * @default undefined
     */
    termsConditionsUrl?: string;
    /**
     * You can add an url for the privacy policy link.
     * @default undefined
     */
    privacyPolicyUrl?: string;
    /**
     * You can enable or disable the SIWE feature in your AppKit.
     * @default false
     */
    isSiweEnabled?: boolean;
    /**
     * Enable analytics to get more insights on your users activity within your WalletConnect Cloud's dashboard.
     * @default false
     * @see https://cloud.walletconnect.com/
     */
    enableAnalytics?: boolean;
    /**
     * Set of fields that related to your project which will be used to populate the metadata of the modal.
     * @default {}
     */
    metadata?: Metadata;
    /**
     * Enable or disable the onramp feature in your AppKit.
     * @default true
     */
    enableOnramp?: boolean;
    /**
     * Enable or disable the appending the AppKit to the DOM. Created for specific use cases like WebGL.
     * @default false
     */
    disableAppend?: boolean;
    /**
     * Enable or disable the EIP6963 feature in your AppKit.
     * @default false
     */
    enableEIP6963?: boolean;
    /**
     * Enable or disable the onramp feature in your AppKit.
     * @default true
     */
    enableSwaps?: boolean;
    isUniversalProvider?: boolean;
    hasMultipleAddresses?: boolean;
}
export declare const OptionsController: {
    state: OptionsControllerState;
    subscribeKey<K extends keyof OptionsControllerState>(key: K, callback: (value: OptionsControllerState[K]) => void): () => void;
    setOptions(options: OptionsControllerState): void;
    setProjectId(projectId: OptionsControllerState['projectId']): void;
    setAllWallets(allWallets: OptionsControllerState['allWallets']): void;
    setIncludeWalletIds(includeWalletIds: OptionsControllerState['includeWalletIds']): void;
    setExcludeWalletIds(excludeWalletIds: OptionsControllerState['excludeWalletIds']): void;
    setFeaturedWalletIds(featuredWalletIds: OptionsControllerState['featuredWalletIds']): void;
    setTokens(tokens: OptionsControllerState['tokens']): void;
    setTermsConditionsUrl(termsConditionsUrl: OptionsControllerState['termsConditionsUrl']): void;
    setPrivacyPolicyUrl(privacyPolicyUrl: OptionsControllerState['privacyPolicyUrl']): void;
    setCustomWallets(customWallets: OptionsControllerState['customWallets']): void;
    setIsSiweEnabled(isSiweEnabled: OptionsControllerState['isSiweEnabled']): void;
    setIsUniversalProvider(isUniversalProvider: OptionsControllerState['isUniversalProvider']): void;
    setEnableAnalytics(enableAnalytics: OptionsControllerState['enableAnalytics']): void;
    setSdkVersion(sdkVersion: OptionsControllerState['sdkVersion']): void;
    setMetadata(metadata: OptionsControllerState['metadata']): void;
    setOnrampEnabled(enableOnramp: OptionsControllerState['enableOnramp']): void;
    setDisableAppend(disableAppend: OptionsControllerState['disableAppend']): void;
    setEIP6963Enabled(enableEIP6963: OptionsControllerState['enableEIP6963']): void;
    setHasMultipleAddresses(hasMultipleAddresses: OptionsControllerState['hasMultipleAddresses']): void;
    setEnableSwaps(enableSwaps: OptionsControllerState['enableSwaps']): void;
};
