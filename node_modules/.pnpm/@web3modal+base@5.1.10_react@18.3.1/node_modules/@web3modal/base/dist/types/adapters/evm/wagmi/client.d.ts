import type { ChainAdapter, OptionsControllerState } from '@web3modal/core';
import type { Chain } from '@wagmi/core/chains';
import type { Config } from '@wagmi/core';
import type { CaipNetwork, ConnectionControllerClient, NetworkControllerClient, PublicStateControllerState } from '@web3modal/core';
import type { AppKitOptions } from '../../../utils/TypesUtil.js';
import type { Chain as AvailableChain } from '@web3modal/common';
import type { AppKit } from '../../../src/client.js';
export interface AdapterOptions<C extends Config> extends Pick<AppKitOptions, 'siweConfig' | 'enableEIP6963'> {
    wagmiConfig: C;
    defaultChain?: Chain;
}
interface Web3ModalState extends PublicStateControllerState {
    selectedNetworkId: number | undefined;
}
export declare class EVMWagmiClient implements ChainAdapter {
    private appKit;
    private wagmiConfig;
    options: AppKitOptions | undefined;
    chain: AvailableChain;
    networkControllerClient: NetworkControllerClient;
    connectionControllerClient: ConnectionControllerClient;
    defaultChain: CaipNetwork | undefined;
    tokens: import("@web3modal/core").Tokens | undefined;
    getCaipDefaultChain: CaipNetwork | undefined;
    siweControllerClient: import("@web3modal/siwe").Web3ModalSIWEClient | undefined;
    constructor(options: AdapterOptions<Config>);
    construct(appKit: AppKit, options: OptionsControllerState): void;
    subscribeState(callback: (state: Web3ModalState) => void): (() => void) | undefined;
    private syncRequestedNetworks;
    private syncAccount;
    private syncNetwork;
    private syncWalletConnectName;
    private syncProfile;
    private syncBalance;
    private syncConnectedWalletInfo;
    private syncConnectors;
    private syncAuthConnector;
    private initAuthConnectorListeners;
    private listenAuthConnector;
    private listenModal;
}
export {};
